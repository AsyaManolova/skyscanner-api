{"remainingRequest":"/var/www/html/Vue/skyscanner-api/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/var/www/html/Vue/skyscanner-api/src/components/PlacesWrapper.vue?vue&type=script&lang=js","dependencies":[{"path":"/var/www/html/Vue/skyscanner-api/src/components/PlacesWrapper.vue","mtime":1627296545389},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGxhY2VzV3JhcHBlcicsCiAgY29tcHV0ZWQ6IHsKICAgIHBsYWNlcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UGxhY2VzOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZmV0Y2hQbGFjZXMnKTsKICB9LAp9Owo="},{"version":3,"sources":["/var/www/html/Vue/skyscanner-api/src/components/PlacesWrapper.vue"],"names":[],"mappings":";AAUA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;EACH,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;AACH,CAAC","file":"/var/www/html/Vue/skyscanner-api/src/components/PlacesWrapper.vue","sourceRoot":"","sourcesContent":["<template>\n  <ul v-for=\"place in places\" :key=\"place.PlaceId\">\n    <li>\n      <h3>{{place.PlaceName}}</h3>\n      <h5>{{place.CountryName}}</h5>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'PlacesWrapper',\n  computed: {\n    places() {\n      return this.$store.getters.getPlaces;\n    },\n  },\n  created() {\n    this.$store.dispatch('fetchPlaces');\n  },\n};\n</script>\n"]}]}