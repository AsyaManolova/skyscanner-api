{"remainingRequest":"/var/www/html/Vue/skyscanner-api/node_modules/babel-loader/lib/index.js!/var/www/html/Vue/skyscanner-api/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/Vue/skyscanner-api/src/store/index.js","dependencies":[{"path":"/var/www/html/Vue/skyscanner-api/src/store/index.js","mtime":1627296490257},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/Vue/skyscanner-api/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi92YXIvd3d3L2h0bWwvVnVlL3NreXNjYW5uZXItYXBpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCBjcmVhdGVTdG9yZSh7CiAgc3RhdGU6IHsKICAgIHBsYWNlczogW10KICB9LAogIG11dGF0aW9uczogewogICAgc2V0UGxhY2VzOiBmdW5jdGlvbiBzZXRQbGFjZXMoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUucGxhY2VzID0gZGF0YS5QbGFjZXM7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaFBsYWNlczogZnVuY3Rpb24gZmV0Y2hQbGFjZXMoY29udGV4dCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBvcHRpb25zOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vc2t5c2Nhbm5lci1za3lzY2FubmVyLWZsaWdodC1zZWFyY2gtdjEucC5yYXBpZGFwaS5jb20vYXBpc2VydmljZXMvYXV0b3N1Z2dlc3QvdjEuMC9CRy9CR04vYmctQkcvJywKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgcXVlcnk6ICdTb2ZpYScKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICd4LXJhcGlkYXBpLWtleSc6ICc4ZmZkYThlYmNmbXNoMDJkMWM3YWVlM2NiY2Y3cDE5MDQwM2pzbjgwY2FjYjU1OTRjNicsCiAgICAgICAgICAgICAgICAgICAgJ3gtcmFwaWRhcGktaG9zdCc6ICdza3lzY2FubmVyLXNreXNjYW5uZXItZmxpZ2h0LXNlYXJjaC12MS5wLnJhcGlkYXBpLmNvbScKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGF4aW9zLnJlcXVlc3Qob3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdzZXRQbGFjZXMnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRQbGFjZXM6IGZ1bmN0aW9uIGdldFBsYWNlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucGxhY2VzOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfSk7"},{"version":3,"sources":["/var/www/html/Vue/skyscanner-api/src/store/index.js"],"names":["createStore","axios","state","places","mutations","setPlaces","data","Places","actions","fetchPlaces","context","options","method","url","params","query","headers","request","then","response","console","log","commit","catch","error","getters","getPlaces","modules"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAeD,WAAW,CAAC;AACzBE,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GADkB;AAIzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SADS,qBACCH,KADD,EACQI,IADR,EACc;AACrBJ,MAAAA,KAAK,CAACC,MAAN,GAAeG,IAAI,CAACC,MAApB;AACD;AAHQ,GAJc;AASzBC,EAAAA,OAAO,EAAE;AACDC,IAAAA,WADC,uBACWC,OADX,EACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,gBAAAA,OADmB,GACT;AACdC,kBAAAA,MAAM,EAAE,KADM;AAEdC,kBAAAA,GAAG,EAAE,0GAFS;AAGdC,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,KAAK,EAAE;AAAT,mBAHM;AAIdC,kBAAAA,OAAO,EAAE;AACP,sCAAkB,oDADX;AAEP,uCAAmB;AAFZ;AAJK,iBADS;AAWzBf,gBAAAA,KAAK,CAACgB,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAACC,QAAD,EAAc;AACxCC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACb,IAArB;AACAI,kBAAAA,OAAO,CAACY,MAAR,CAAe,WAAf,EAA4BH,QAAQ,CAACb,IAArC;AACD,iBAHD,EAGGiB,KAHH,CAGS,UAACC,KAAD,EAAW;AAClBJ,kBAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,iBALD;;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB1B;AAlBM,GATgB;AA6BzBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SADO,qBACGxB,KADH,EACU;AACf,aAAOA,KAAK,CAACC,MAAb;AACD;AAHM,GA7BgB;AAkCzBwB,EAAAA,OAAO,EAAE;AAlCgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nexport default createStore({\n  state: {\n    places: [],\n  },\n  mutations: {\n    setPlaces(state, data) {\n      state.places = data.Places;\n    },\n  },\n  actions: {\n    async fetchPlaces(context) {\n      const options = {\n        method: 'GET',\n        url: 'https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/BG/BGN/bg-BG/',\n        params: { query: 'Sofia' },\n        headers: {\n          'x-rapidapi-key': '8ffda8ebcfmsh02d1c7aee3cbcf7p190403jsn80cacb5594c6',\n          'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n        },\n      };\n\n      axios.request(options).then((response) => {\n        console.log(response.data);\n        context.commit('setPlaces', response.data);\n      }).catch((error) => {\n        console.error(error);\n      });\n    },\n  },\n  getters: {\n    getPlaces(state) {\n      return state.places;\n    },\n  },\n  modules: {\n  },\n});\n"]}]}